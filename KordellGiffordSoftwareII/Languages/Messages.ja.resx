<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="15" xml:space="preserve">
    <value>15分以内に開始されます。</value>
  </data>
  <data name="add" xml:space="preserve">
    <value>作成</value>
  </data>
  <data name="add apoint" xml:space="preserve">
    <value>作成</value>
  </data>
  <data name="address" xml:space="preserve">
    <value>住所</value>
  </data>
  <data name="address2" xml:space="preserve">
    <value>住所2</value>
  </data>
  <data name="alatries" xml:space="preserve">
    <value>アラトレイスの慰め</value>
  </data>
  <data name="appointment" xml:space="preserve">
    <value>予定</value>
  </data>
  <data name="apt created" xml:space="preserve">
    <value>予定が作成されました。</value>
  </data>
  <data name="apt deleted" xml:space="preserve">
    <value>予定は削除されました。</value>
  </data>
  <data name="apt not created" xml:space="preserve">
    <value>予定を作成できません。</value>
  </data>
  <data name="apt not deleted" xml:space="preserve">
    <value>予定を削除できません。</value>
  </data>
  <data name="apt not updated" xml:space="preserve">
    <value>予定を更新できません。</value>
  </data>
  <data name="apt title" xml:space="preserve">
    <value>予定のタイトル</value>
  </data>
  <data name="apt update" xml:space="preserve">
    <value>予定が更新されました。</value>
  </data>
  <data name="bad time" xml:space="preserve">
    <value>予定は営業時間には含まれません。 （M-F 8-5）</value>
  </data>
  <data name="by cust" xml:space="preserve">
    <value>顧客別の会議の種類</value>
  </data>
  <data name="by month" xml:space="preserve">
    <value>月別の会議の種類</value>
  </data>
  <data name="by user" xml:space="preserve">
    <value>各コンサルタントのスケジュール</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="city" xml:space="preserve">
    <value>市</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="confirm" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="confirm delete" xml:space="preserve">
    <value>消去してもよろしいですか</value>
  </data>
  <data name="contact" xml:space="preserve">
    <value>連絡先</value>
  </data>
  <data name="country" xml:space="preserve">
    <value>国</value>
  </data>
  <data name="cust add" xml:space="preserve">
    <value>顧客が追加されました。</value>
  </data>
  <data name="cust and apt" xml:space="preserve">
    <value>顧客は予定に割り当てられています</value>
  </data>
  <data name="cust delete" xml:space="preserve">
    <value>削除されました。</value>
  </data>
  <data name="cust name" xml:space="preserve">
    <value>顧客名</value>
  </data>
  <data name="cust not added" xml:space="preserve">
    <value>新しい顧客を追加できません。</value>
  </data>
  <data name="cust not updated" xml:space="preserve">
    <value>顧客を更新できません。</value>
  </data>
  <data name="cust select" xml:space="preserve">
    <value>顧客を選択する必要があります。</value>
  </data>
  <data name="cust update" xml:space="preserve">
    <value>お客様が更新されました。</value>
  </data>
  <data name="custId" xml:space="preserve">
    <value>顧客ID</value>
  </data>
  <data name="customer not deleted" xml:space="preserve">
    <value>顧客を削除できません。</value>
  </data>
  <data name="customers" xml:space="preserve">
    <value>お客様</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="delete appoint" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>説明</value>
  </data>
  <data name="end" xml:space="preserve">
    <value>終わり</value>
  </data>
  <data name="end time" xml:space="preserve">
    <value>終了時間</value>
  </data>
  <data name="friday" xml:space="preserve">
    <value>金</value>
  </data>
  <data name="generate" xml:space="preserve">
    <value>生む</value>
  </data>
  <data name="location" xml:space="preserve">
    <value>場所</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>ログイン</value>
  </data>
  <data name="main screen" xml:space="preserve">
    <value>メインスクリーン</value>
  </data>
  <data name="modify" xml:space="preserve">
    <value>変更</value>
  </data>
  <data name="monday" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="no apt" xml:space="preserve">
    <value>最初に予定を選択する必要があります。</value>
  </data>
  <data name="no match" xml:space="preserve">
    <value>パスワードがユーザー名と一致しません。</value>
  </data>
  <data name="no username" xml:space="preserve">
    <value>ユーザー名は存在しません。</value>
  </data>
  <data name="overlap" xml:space="preserve">
    <value>今回はすでに予約が入っています。</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>パスワード</value>
  </data>
  <data name="phone" xml:space="preserve">
    <value>電話</value>
  </data>
  <data name="postal" xml:space="preserve">
    <value>郵便</value>
  </data>
  <data name="reports" xml:space="preserve">
    <value>レポート</value>
  </data>
  <data name="saturday" xml:space="preserve">
    <value>土</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="schedule" xml:space="preserve">
    <value>コンサルタントによるスケジュール</value>
  </data>
  <data name="start" xml:space="preserve">
    <value>開始</value>
  </data>
  <data name="start time" xml:space="preserve">
    <value>始まる時間</value>
  </data>
  <data name="sunday" xml:space="preserve">
    <value>日</value>
  </data>
  <data name="thursday" xml:space="preserve">
    <value>木</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>題名</value>
  </data>
  <data name="tuesday" xml:space="preserve">
    <value>火</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>タイプ</value>
  </data>
  <data name="update appoint" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="url" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="username" xml:space="preserve">
    <value>ユーザー名</value>
  </data>
  <data name="wednesday" xml:space="preserve">
    <value>水</value>
  </data>
  <data name="week view" xml:space="preserve">
    <value>週ビュー</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>お帰りなさい</value>
  </data>
</root>